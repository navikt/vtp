<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mocks</artifactId>
        <groupId>no.nav.foreldrepenger.vtp</groupId>
        <version>${revision}${sha1}${changelist}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>saf-mock</artifactId>
    <name>VTP ::saf-mock</name>
    <packaging>jar</packaging>

    <properties>
        <apigen.version>5.0.0</apigen.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>no.nav.tjenester</groupId>
            <artifactId>nav-journal-v2-tjenestespesifikasjon</artifactId>
            <classifier>jaxws</classifier>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.distelli.graphql</groupId>
            <artifactId>graphql-apigen-deps</artifactId>
            <version>${apigen.version}</version>
        </dependency>
    </dependencies>

<!--
    Hvis Saf-tjenesten sin modell (saf.graphql) skulle endre seg, kan denne kommenteres inn for å kjøre kodegenerering på nytt.
    Desverre kompilerer det ikke ut av boksen, så quick-fiksen ble å kommentere det ut etter kjøring og bytte
    ut alle forekomster av Date og DateTime i kildefilene med LocalDate og LocalDateTime v.h.a. find/replace.

    <build>
        <plugins>
            <plugin>
                <groupId>com.distelli.graphql</groupId>
                <artifactId>graphql-apigen</artifactId>
                <version>${apigen.version}</version>
                <configuration>
                    &lt;!&ndash; Optional. This is only needed if you omit the @java(package:"...")
                         annotations from your schema types. Using this feature
                         also means your GraphQL schema can NOT be depended upon
                         by GraphQL schemas defined in other maven projects. See:
                         https://github.com/Distelli/graphql-apigen/issues/5#issuecomment-275923555
                    &ndash;&gt;
                    <defaultPackageName>no.nav.saf</defaultPackageName>
                    &lt;!&ndash; Optional. Location of your schema file(s). Default is ${project.basedir}/schema. The
                         expected extension is *.graphql. &ndash;&gt;
                    <sourceDirectory>${project.basedir}/src/main/resources/schemas</sourceDirectory>
                    &lt;!&ndash; Optional. Output folder for Java source. Default is ${project.basedir}/target/generated-sources/apigen.
                    <outputDirectory>output/folder</outputDirectory>&ndash;&gt;
                </configuration>
                <executions>
                    <execution>
                        <id>java-apigen</id>
                        <goals>
                            <goal>apigen</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>-->
</project>
